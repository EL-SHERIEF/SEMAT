name: Maintain Semat Agency Site

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */8 * * *'
  workflow_dispatch:

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y python3 curl

      - name: Post-Process HTML for Arabic (Root)
        run: |
          find . -type f -name "*.html" -not -path "./en/*" -exec sed -i \
            -e 's/<html/<html dir="rtl" lang="ar"/' \
            -e '/<head>/a <link rel="canonical" href="https://semat.agency/" />' \
            -e '/<head>/a <link rel="alternate" hreflang="ar-SA" href="https://semat.agency/" />' \
            -e '/<head>/a <link rel="alternate" hreflang="ar" href="https://semat.agency/" />' \
            -e '/<head>/a <link rel="alternate" hreflang="en" href="https://semat.agency/en" />' \
            -e '/<head>/a <link rel="alternate" hreflang="x-default" href="https://semat.agency/" />' \
            -e '/<head>/a <style>body { direction: rtl; text-align: right; overflow-x: hidden; margin: 0; padding: 0; } #__framer-badge-container, .framer-nm3c8g { display: none !important; } [data-framer-component] { direction: rtl !important; } .framer-text.framer-image { border-radius: 20px !important; max-height: 500px !important; object-fit: cover !important; }<\/style>' \
            -e '/<head>/a <script type="application/ld+json">{"@context":"https://schema.org","@type":"LocalBusiness","name":"Semat Agency","description":"Semat Agency provides IT solutions, digital marketing, and custom software development for businesses in Saudi Arabia.","url":"https://semat.agency/index.html","address":{"@type":"PostalAddress","streetAddress":"123 Business Street","addressLocality":"Riyadh","addressRegion":"Riyadh Province","addressCountry":"SA","postalCode":"12345"},"telephone":"+966-50-361-7701","openingHours":"Mo-Fr 09:00-17:00","geo":{"@type":"GeoCoordinates","latitude":"24.7136","longitude":"46.6753"},"sameAs":["https://semat.agency/servieces.html","https://semat.agency/solutions.html","https://semat.agency/contact-us.html"]}<\/script>' \
            {} \;

      - name: Post-Process HTML for English (/en)
        run: |
          find ./en -type f -name "*.html" -exec sed -i \
            -e 's/<html/<html dir="ltr" lang="en"/' \
            -e '/<head>/a <link rel="canonical" href="https://semat.agency/en" />' \
            -e '/<head>/a <link rel="alternate" hreflang="ar-SA" href="https://semat.agency/" />' \
            -e '/<head>/a <link rel="alternate" hreflang="ar" href="https://semat.agency/" />' \
            -e '/<head>/a <link rel="alternate" hreflang="en" href="https://semat.agency/en" />' \
            -e '/<head>/a <link rel="alternate" hreflang="x-default" href="https://semat.agency/" />' \
            -e '/<head>/a <style>body { direction: ltr; text-align: left; overflow-x: hidden; margin: 0; padding: 0; } #__framer-badge-container, .framer-nm3c8g { display: none !important; } [data-framer-component] { direction: ltr !important; } .framer-text.framer-image { border-radius: 20px !important; max-height: 500px !important; object-fit: cover !important; }<\/style>' \
            -e '/<head>/a <script type="application/ld+json">{"@context":"https://schema.org","@type":"LocalBusiness","name":"Semat Agency","description":"Semat Agency provides IT solutions, digital marketing, and custom software development for businesses in Saudi Arabia.","url":"https://semat.agency/index.html","address":{"@type":"PostalAddress","streetAddress":"123 Business Street","addressLocality":"Riyadh","addressRegion":"Riyadh Province","addressCountry":"SA","postalCode":"12345"},"telephone":"+966-50-361-7701","openingHours":"Mo-Fr 09:00-17:00","geo":{"@type":"GeoCoordinates","latitude":"24.7136","longitude":"46.6753"},"sameAs":["https://semat.agency/servieces.html","https://semat.agency/solutions.html","https://semat.agency/contact-us.html"]}<\/script>' \
            {} \;

      - name: Generate Sitemaps, Robots, and RSS
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > sitemap.xml
          echo '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">' >> sitemap.xml
          find . -type f -name "*.html" -not -path "./en/*" | while read -r file; do
            url="https://semat.agency/${file#./}"
            lastmod=$(date -u -d "now" +%Y-%m-%dT%H:%M:%SZ)
            priority=$(if [[ "$file" == "./index.html" ]]; then echo "1.0"; else echo "0.8"; fi)
            echo "  <url><loc>$url</loc><lastmod>$lastmod</lastmod><changefreq>daily</changefreq><priority>$priority</priority></url>" >> sitemap.xml
          done
          echo '</urlset>' >> sitemap.xml

          echo '<?xml version="1.0" encoding="UTF-8"?>' > en/sitemap.xml
          echo '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">' >> en/sitemap.xml
          find ./en -type f -name "*.html" | while read -r file; do
            url="https://semat.agency/${file#./}"
            lastmod=$(date -u -d "now" +%Y-%m-%dT%H:%M:%SZ)
            priority=$(if [[ "$file" == "./en/index.html" ]]; then echo "1.0"; else echo "0.8"; fi)
            echo "  <url><loc>$url</loc><lastmod>$lastmod</lastmod><changefreq>daily</changefreq><priority>$priority</priority></url>" >> en/sitemap.xml
          done
          echo '</urlset>' >> en/sitemap.xml

          echo "User-agent: *" > robots.txt
          echo "Allow: /" >> robots.txt
          echo "Allow: /en/" >> robots.txt
          echo "Disallow: /*?*" >> robots.txt
          echo "Disallow: /index.html" >> robots.txt
          echo "Sitemap: https://semat.agency/sitemap.xml" >> robots.txt
          echo "Sitemap: https://semat.agency/en/sitemap.xml" >> robots.txt
          if [ -f robots.txt ]; then
            echo "robots.txt generated:"
            cat robots.txt
          else
            echo "Failed to generate robots.txt" >&2
            exit 1
          fi

          echo '<?xml version="1.0" encoding="UTF-8"?>' > rss.xml
          echo '<rss version="2.0"><channel>' >> rss.xml
          echo "<title>Semat Agency Updates</title><link>https://semat.agency</link><description>Latest updates from Semat Agency</description>" >> rss.xml
          find . -type f -name "*.html" -not -path "./en/*" | while read -r file; do
            url="https://semat.agency/${file#./}"
            title=$(basename "$file" .html | tr '-' ' ' | awk '{for(i=1;i<=NF;i++){$i=toupper(substr($i,1,1)) substr($i,2)}}1')
            echo "<item><title>Arabic: $title</title><link>$url</link><pubDate>$(date -u -R)</pubDate><description>Updated Arabic page</description></item>" >> rss.xml
          done
          find ./en -type f -name "*.html" | while read -r file; do
            url="https://semat.agency/${file#./}"
            title=$(basename "$file" .html | tr '-' ' ' | awk '{for(i=1;i<=NF;i++){$i=toupper(substr($i,1,1)) substr($i,2)}}1')
            echo "<item><title>English: $title</title><link>$url</link><pubDate>$(date -u -R)</pubDate><description>Updated English page</description></item>" >> rss.xml
          done
          echo '</channel></rss>' >> rss.xml

      - name: Commit and Push Changes
        env:
          ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Automated update: Fixed redirect loops for robots.txt and sitemap.xml"
            git push https://x-access-token:${{ secrets.ACTIONS_PAT }}@github.com/${{ github.repository }}.git HEAD:main
          fi

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          npm install -g vercel
          vercel --token $VERCEL_TOKEN --prod --scope $VERCEL_ORG_ID --project $VERCEL_PROJECT_ID --confirm

      - name: Verify Deployment
        run: |
          echo "Verifying deployment..."
          sleep 15
          # Check root
          echo "Checking root (https://semat.agency/):"
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://semat.agency/)
          LOCATION=$(curl -s -I https://semat.agency/ | grep -i '^Location:' | cut -d' ' -f2- | tr -d '\r\n')
          FINAL_STATUS=$(curl -s -L -o /dev/null -w "%{http_code}" -m 10 --max-redirs 5 https://semat.agency/)
          REDIRECT_CHAIN=$(curl -s -L -I -w "%{url_effective} (%{http_code})\n" -m 10 --max-redirs 5 https://semat.agency/ 2>/dev/null | grep -v '^$')
          if [ "$STATUS" -eq 200 ]; then
            echo "Root accessible directly (HTTP $STATUS)"
          elif [ "$FINAL_STATUS" -eq 200 ]; then
            echo "Root redirected (HTTP $STATUS) to: $LOCATION, final status: $FINAL_STATUS"
            echo "Redirect chain:\n$REDIRECT_CHAIN"
          else
            echo "Root failed - Initial: $STATUS (to: $LOCATION), Final: $FINAL_STATUS" >&2
            echo "Redirect chain:\n$REDIRECT_CHAIN" >&2
            exit 1
          fi
          # Check /en
          echo "Checking English (https://semat.agency/en):"
          STATUS_EN=$(curl -s -o /dev/null -w "%{http_code}" https://semat.agency/en)
          LOCATION_EN=$(curl -s -I https://semat.agency/en | grep -i '^Location:' | cut -d' ' -f2- | tr -d '\r\n')
          FINAL_STATUS_EN=$(curl -s -L -o /dev/null -w "%{http_code}" -m 10 --max-redirs 5 https://semat.agency/en)
          REDIRECT_CHAIN_EN=$(curl -s -L -I -w "%{url_effective} (%{http_code})\n" -m 10 --max-redirs 5 https://semat.agency/en 2>/dev/null | grep -v '^$')
          if [ "$STATUS_EN" -eq 200 ]; then
            echo "English accessible directly (HTTP $STATUS_EN)"
          elif [ "$FINAL_STATUS_EN" -eq 200 ]; then
            echo "English redirected (HTTP $STATUS_EN) to: $LOCATION_EN, final status: $FINAL_STATUS_EN"
            echo "Redirect chain:\n$REDIRECT_CHAIN_EN"
          else
            echo "English failed - Initial: $STATUS_EN (to: $LOCATION_EN), Final: $FINAL_STATUS_EN" >&2
            echo "Redirect chain:\n$REDIRECT_CHAIN_EN" >&2
            exit 1
          fi
          # Check robots.txt
          echo "Checking robots.txt (https://semat.agency/robots.txt):"
          STATUS_ROBOTS=$(curl -s -o /dev/null -w "%{http_code}" https://semat.agency/robots.txt)
          LOCATION_ROBOTS=$(curl -s -I https://semat.agency/robots.txt | grep -i '^Location:' | cut -d' ' -f2- | tr -d '\r\n')
          FINAL_STATUS_ROBOTS=$(curl -s -L -o /dev/null -w "%{http_code}" -m 10 --max-redirs 5 https://semat.agency/robots.txt)
          REDIRECT_CHAIN_ROBOTS=$(curl -s -L -I -w "%{url_effective} (%{http_code})\n" -m 10 --max-redirs 5 https://semat.agency/robots.txt 2>/dev/null | grep -v '^$')
          if [ "$STATUS_ROBOTS" -eq 200 ]; then
            echo "robots.txt accessible directly (HTTP $STATUS_ROBOTS)"
            curl -s https://semat.agency/robots.txt
          elif [ "$FINAL_STATUS_ROBOTS" -eq 200 ]; then
            echo "robots.txt redirected (HTTP $STATUS_ROBOTS) to: $LOCATION_ROBOTS, final status: $FINAL_STATUS_ROBOTS"
            echo "Redirect chain:\n$REDIRECT_CHAIN_ROBOTS"
            curl -s https://semat.agency/robots.txt
          else
            echo "robots.txt failed - Initial: $STATUS_ROBOTS (to: $LOCATION_ROBOTS), Final: $FINAL_STATUS_ROBOTS" >&2
            echo "Redirect chain:\n$REDIRECT_CHAIN_ROBOTS" >&2
            exit 1
          fi
          # Check sitemap.xml
          echo "Checking sitemap.xml (https://semat.agency/sitemap.xml):"
          STATUS_SITEMAP=$(curl -s -o /dev/null -w "%{http_code}" https://semat.agency/sitemap.xml)
          LOCATION_SITEMAP=$(curl -s -I https://semat.agency/sitemap.xml | grep -i '^Location:' | cut -d' ' -f2- | tr -d '\r\n')
          FINAL_STATUS_SITEMAP=$(curl -s -L -o /dev/null -w "%{http_code}" -m 10 --max-redirs 5 https://semat.agency/sitemap.xml)
          REDIRECT_CHAIN_SITEMAP=$(curl -s -L -I -w "%{url_effective} (%{http_code})\n" -m 10 --max-redirs 5 https://semat.agency/sitemap.xml 2>/dev/null | grep -v '^$')
          if [ "$STATUS_SITEMAP" -eq 200 ]; then
            echo "sitemap.xml accessible directly (HTTP $STATUS_SITEMAP)"
            curl -s https://semat.agency/sitemap.xml
          elif [ "$FINAL_STATUS_SITEMAP" -eq 200 ]; then
            echo "sitemap.xml redirected (HTTP $STATUS_SITEMAP) to: $LOCATION_SITEMAP, final status: $FINAL_STATUS_SITEMAP"
            echo "Redirect chain:\n$REDIRECT_CHAIN_SITEMAP"
            curl -s https://semat.agency/sitemap.xml
          else
            echo "sitemap.xml failed - Initial: $STATUS_SITEMAP (to: $LOCATION_SITEMAP), Final: $FINAL_STATUS_SITEMAP" >&2
            echo "Redirect chain:\n$REDIRECT_CHAIN_SITEMAP" >&2
            exit 1
          fi
